import fetch from 'node-fetch';

const botToken = process.env.BOT_TOKEN;
const chatId = '5120801744';
const apiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;

export default async function handler(
  request: { method: string; body: { email: any; name: any; message: any } },
  result: {
    status: (arg0: number) => {
      (): any;
      new (): any;
      json: {
        (arg0: { error?: string; success?: boolean }): void;
        new (): any;
      };
    };
  }
) {
  if (request.method !== 'POST') {
    return result.status(405).json({ error: '–ú–µ—Ç–æ–¥ –Ω–µ —Ä–∞–∑—Ä–µ—à—ë–Ω' });
  }

  const { email, name, message } = request.body;

  if (!email || !message) {
    return result.status(400).json({ error: 'Email –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã.' });
  }

  const messageToSend = `
  <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</b> üì©
${name ? `<b>–ò–º—è:</b> ${name}` : '<i>–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>'}
${email ? `<b>Email:</b> ${email}` : '<i>Email –Ω–µ —É–∫–∞–∑–∞–Ω</i>'}
  
<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
${message}`;

  const params = {
    chat_id: chatId,
    text: messageToSend,
    parse_mode: 'HTML',
  };

  try {
    const response = await fetch(apiUrl, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ params }),
    });

    if (!response.ok) {
      throw new Error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
    }

    result.status(200).json({ success: true });
  } catch (error) {
    console.error(error);
    result.status(500).json({ error: '–û—à–∏–±–∫–∞ —Ä–∞–±–æ—Ç—ã —Å–µ—Ä–≤–µ—Ä–∞ - —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É –ø–æ–∑–∂–µ' });
  }
}
