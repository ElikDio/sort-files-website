import React, { useState } from 'react';
import { Button } from '../ui/button/Button';
import { CheckBox } from '../ui/checkbox/CheckBox';
import { Input } from '../ui/input/Input';
import styles from './FeedbackForm.module.scss';

export const FeedbackForm: React.FC = () => {
  const [email, setEmail] = useState('');
  const [message, setMessage] = useState('');
  const [name, setName] = useState('');
  const [consent, setConsent] = useState(false);
  const [errorText, setErrorText] = useState<string>('');
  const [successText, setSuccessText] = useState<string>('');

  const botToken = 'TOKEN';
  const chatId = '789975135';
  const apiUrl = `https://api.telegram.org/bot${botToken}/sendMessage`;


  /** TODO: 
   * 1) –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å: –≤—ã–∑—ã–≤–∞—Ç—å api –º–µ—Ç–æ–¥ —Å —Å–µ—Ä–≤–µ—Ä–∞, –∞ –Ω–µ –Ω–∞–ø—Ä—è–º—É—é, —á—Ç–æ–±—ã —Å–∫—Ä—ã—Ç—å —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –ø–∞—É–∑—É –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ —Å –æ–¥–Ω–æ–≥–æ ip. 
   * 2) –í—ã–Ω–µ—Å—Ç–∏ –ª–æ–≥–∏–∫—É –≤—ã–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è –≤ utils
   * */
  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    setErrorText('');

    if (!consent) {
      setErrorText('–í—ã –¥–æ–ª–∂–Ω—ã –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö:');
      return;
    }

    try {
      const messageToSend = `
      <b>–ù–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ä–º—ã –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏</b> üì©
  ${name ? `<b>–ò–º—è:</b> ${name}` : '<i>–ò–º—è –Ω–µ —É–∫–∞–∑–∞–Ω–æ</i>'}
  ${email ? `<b>Email:</b> ${email}` : '<i>Email –Ω–µ —É–∫–∞–∑–∞–Ω</i>'}
      
<b>–°–æ–æ–±—â–µ–Ω–∏–µ:</b>
  ${message}`;

      const params = {
        chat_id: chatId,
        text: messageToSend,
        parse_mode: 'HTML',
      };

      const response = await fetch(apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(params),
      });

      const data = await response.json();

      if (response.ok) {
        setSuccessText('–°–æ–æ–±—â–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
      } else {
        setErrorText(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${data.error}`);
      }
    } catch (error) {
      setErrorText(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ${error}`);
    }

    setTimeout(() => {
      setErrorText('');
      setSuccessText('');
    }, 7000);
  };

  return (
    <section
      className={styles.feedbackForm}
      id="feedback-form"
    >
      <img
        src="/photos/background-ff.png"
        alt=""
      />
      <div className={styles.feebackInfo}>
        <h1>–ú—ã –≤—Å–µ–≥–¥–∞ —Ä–∞–¥—ã –≤–∞—à–µ–º—É –º–Ω–µ–Ω–∏—é!</h1>
        <p>
          –ü–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏ –∏–ª–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ —Å–¥–µ–ª–∞—Ç—å Sort
          Files –µ—â—ë –ª—É—á—à–µ
        </p>
      </div>

      <form
        onSubmit={handleSubmit}
        className={styles.callbackForm}
      >
        <div className={styles.box}>
          <Input
            placeholder="–í–∞—à–µ –∏–º—è"
            onChange={setName}
          />
          <Input
            type="email"
            onChange={setEmail}
            placeholder="–í–∞—à e-mail –¥–ª—è –æ—Ç–≤–µ—Ç–∞"
          />
          <Input
            required={true}
            errorText={errorText}
            successText={successText}
            onChange={setMessage}
            placeholder="–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"
            type="textarea"
          />
          <CheckBox
            name={'consent'}
            onChange={() => setConsent(!consent)}
          >
            –î–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –º–æ–∏—Ö –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å{' '}
            <a
              href="https://sort-files.ru/confidential.html"
              target="_blank"
              rel="noreferrer"
            >
              –ø–æ–ª–∏—Ç–∏–∫–æ–π –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏
            </a>
          </CheckBox>
        </div>
        <Button type="submit">–û—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–æ–æ–±—â–µ–Ω–∏–µ</Button>
      </form>
    </section>
  );
};
